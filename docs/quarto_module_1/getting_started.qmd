# Before you begin

All course modules will start with a *Before you begin* section. In these sections, you will download data and scripts required to complete the module, install any required packages, and take other necessary steps before diving into the material. In this lesson, you will learn:

-   How to set your global options for this course;
-   How to open an RStudio project;
-   Steps that you should take each time you initiate a session.

[{{< fa exclamation-triangle size=2x >}} **Important!**]{style="color: red;"} Before starting this lesson, be sure that you have followed the steps provided in [Lesson 1.1: Installing R and RStudio](https://smbc.shinyapps.io/L0-intro_RStudio/#section-installing-r-and-the-rstudio){target="_blank"} to install the *most current* version of R and RStudio. This lesson also assumes that you are familiar with the concepts and terminology covered in [Lesson 1.3: The RStudio IDE](https://smbc.shinyapps.io/L0-intro_RStudio/#section-the-rstudio-ide){target="_blank"}.

## Set your global options

RStudio's **global options** define the behavior and layout of the RStudio IDE every time you open the program. Here, we will modify your global options to ensure that they are set to maximize your success in this course (and beyond).

Please follow the steps in the video below to set up your global options:

{{< video https://www.youtube.com/embed/PCPTI0Pw76w?si=4xqDF8XuaJ1pGVF2 >}}

## Set up your session

An R Studio **session** represents the time spent and operations conducted since opening R.

### Open an RStudio project

A session is initiated by opening a **project** in RStudio. A project is a folder that contains a collection of files (e.g., scripts, data, output) and sub-folders. The parent folder is designated as a project if it includes a [.Rproj]{style="font-family: monospace"} file. All content for this course will be stored in a project and all code will be executed from within this project.

We can open our project in one of four ways:

[The project menu (![](images/project_button.png))]{style="font-size: 1.5em"}

![](images/open_project_upper_right.gif)

*Note: If you use this method, you can open a recent project by simply clicking on the name from the list of options at the bottom of the dropdown menu.*

1.  Open RStudio
2.  Click the blue square in the upper right of the window
3.  Navigate to "Open Project ..."
4.  Navigate to your project in the window that opens
5.  Double-click on the [.Rproj]{style="font-family: monospace;"} file.

[The ![](images/rstudio_logo.png){style="height: 1.5em; width: auto; padding-right: 0.25em;"} file menu]{style="font-size: 1.5em"}

![](images/open_project_file_menu.gif)

1.  Open RStudio
2.  In the top menu bar, click "File"
3.  Navigate to "Open Project ..."
4.  Navigate to your project in the window that opens
5.  Double-click on the [.Rproj]{style="font-family: monospace;"} file.

[Using a keyboard shortcut]{style="font-size: 1.5em"}

![](images/open_project_keyboard_shortcut.gif)

1.  Open RStudio
2.  Hit the keyboard shortcut Control + O (Windows) or Command + O (Mac)
3.  Navigate to your project in the window that opens
4.  Double-click on the [.Rproj]{style="font-family: monospace;"} file.
5.  Hit enter on the following pop-up menu.

[Windows Explorer (![](images/win_explorer_icon.png){style="height: 1.25em; width: auto;"}) or Finder (![](images/mac_finder.png){style="height: 1.25em; width: auto;"})]{style="font-size: 1.5em"}

![](images/open_project_finder.gif)

1.  Open your system's file explorer (e.g. "Finder" on Macs)
2.  Navigate to your project in the window that opens
3.  Double-click on the [.Rproj]{style="font-family: monospace;"} file.

::: mysecret
{{< fa user-secret size=2x >}} [Always work within a project!]{style="font-size: 1.25em; padding-left: 0.5em;"}

Working in an RStudio project offers lots of advantages. These include (but are not limited to):

-   Your project folder is the root directory of files read in by R. In other words, you read in files relative to their location within the project folder.
-   Projects ensure that your data and scripts are stored in one, easy-to-find, space.
-   Through sharing projects, rather than individual files, it is easy to generate reproducible scripts.
-   Projects provide you with the opportunity to use different versions of packages for various applications.

We will explore these advantages and more in coming lessons!
:::

### Housekeeping steps

At the beginning of each session, I like to do a series of what I call "housekeeping steps". These include clearing any open scripts, your global environment, and your code history. Doing so helps you better organize your workflow and ensures that you can make the most out of RStudio's tools for managing your code and data during a session.

I *strongly* recommend following the steps below at the start of each session:

1.  If there are any script files open in your source pane. Close them. *Note: If any of your script titles are blue, you might want to save them prior to closing!*

![](images/close_scripts.gif){style="margin-left: 2em;" width="93%" height="auto"}

2.  In the *Environment* tab of your **workspace pane**, ensure that your **Global Environment** is empty. If it is not, click the *broom* to remove all objects.

![](images/clear_environment.gif){style="margin-left: 2em;" width="93%" height="auto"}

3.  In the *History* tab of your **workspace pane**, ensure that your history is empty. If it is not, click the *broom* to remove your history.

![](images/clear_history.gif){style="margin-left: 2em;" width="93%" height="auto"}

By completing the steps above, your current session will be dedicated, in its entirety, to the task at hand!
